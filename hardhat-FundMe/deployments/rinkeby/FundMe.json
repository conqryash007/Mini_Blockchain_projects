{
  "address": "0x7c01243251829Cbde9A7a40003E942e6A00573c6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmtFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc28de15dd42afa83061792897ca03d9e531bfa4bb5e1b68a99032653ab2e990f",
  "receipt": {
    "to": null,
    "from": "0x036A013Ef5C9130C0b9E00BE8cCe060f4F9C17CE",
    "contractAddress": "0x7c01243251829Cbde9A7a40003E942e6A00573c6",
    "transactionIndex": 10,
    "gasUsed": "836559",
    "logsBloom": "0x
    "blockHash": "0x455e4e0776dce5e231408502fe9042a5a42882dd71e85d96e612406e1a4204b1",
    "transactionHash": "0xc28de15dd42afa83061792897ca03d9e531bfa4bb5e1b68a99032653ab2e990f",
    "logs": [],
    "blockNumber": 10775563,
    "cumulativeGasUsed": "5642339",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "f060cf6f98bb6754a0f0d3d756e7caad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmtFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\"; // importing library\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// custom errors\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256; // mapping library to any type\\n\\n    uint256 constant MIN_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmtFunded;\\n    AggregatorV3Interface public priceFeed;\\n\\n    address public immutable i_owner;\\n\\n    // Constructor\\n    constructor(AggregatorV3Interface priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_USD,\\n            \\\"Didn't send enough!!\\\"\\n        );\\n\\n        funders.push(msg.sender);\\n        addressToAmtFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            addressToAmtFunded[funders[i]] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        // transfer amount to sender\\n\\n        (bool res, ) = payable(msg.sender).call{value: address(this).balance}(\\n            \\\"\\\"\\n        );\\n\\n        require(res, \\\"Failed!!!\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner,\\\"Not the owner!!!\\\"); (this is before v0.8)\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // fallback & receive\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xda95cb6007990ade0772aba37c6c37aec35d41d2fd956f6f7db2fbc3e5d41c7c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xaad7d4aba7a5e68e5bce583c5cecd57838006b0c8c8bb8caae50069e27799e2a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162000f4b38038062000f4b833981810160405281019062000037919062000134565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000166565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b6000620000fc82620000db565b9050919050565b6200010e81620000ef565b81146200011a57600080fd5b50565b6000815190506200012e8162000103565b92915050565b6000602082840312156200014d576200014c620000b6565b5b60006200015d848285016200011d565b91505092915050565b60805160601c610dbf6200018c600039600081816102a601526105060152610dbf6000f3fe6080604052600436106100595760003560e01c80632e715429146100725780633ccfd60b146100af578063741bef1a146100c6578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b506100996004803603810190610094919061074d565b61028c565b6040516100a69190610793565b60405180910390f35b3480156100bb57600080fd5b506100c46102a4565b005b3480156100d257600080fd5b506100db6104de565b6040516100e8919061080d565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610110610504565b60405161011d9190610837565b60405180910390f35b34801561013257600080fd5b5061014d6004803603810190610148919061087e565b610528565b60405161015a9190610837565b60405180910390f35b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056790919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610908565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610329576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103ce5760006001600080848154811061035257610351610928565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c690610986565b91505061032c565b50600067ffffffffffffffff8111156103ea576103e96109cf565b5b6040519080825280602002602001820160405280156104185781602001602082028036833780820191505090505b506000908051906020019061042e929190610643565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045590610a2f565b60006040518083038185875af1925050503d8060008114610492576040519150601f19603f3d011682016040523d82523d6000602084013e610497565b606091505b50509050806104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d290610a90565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610573836105a3565b90506000670de0b6b3a7640000858361058c9190610ab0565b6105969190610b39565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105ec57600080fd5b505afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190610bf7565b5050509150506402540be4008161063b9190610c72565b915050919050565b8280548282559060005260206000209081019282156106bc579160200282015b828111156106bb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610663565b5b5090506106c991906106cd565b5090565b5b808211156106e65760008160009055506001016106ce565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071a826106ef565b9050919050565b61072a8161070f565b811461073557600080fd5b50565b60008135905061074781610721565b92915050565b600060208284031215610763576107626106ea565b5b600061077184828501610738565b91505092915050565b6000819050919050565b61078d8161077a565b82525050565b60006020820190506107a86000830184610784565b92915050565b6000819050919050565b60006107d36107ce6107c9846106ef565b6107ae565b6106ef565b9050919050565b60006107e5826107b8565b9050919050565b60006107f7826107da565b9050919050565b610807816107ec565b82525050565b600060208201905061082260008301846107fe565b92915050565b6108318161070f565b82525050565b600060208201905061084c6000830184610828565b92915050565b61085b8161077a565b811461086657600080fd5b50565b60008135905061087881610852565b92915050565b600060208284031215610894576108936106ea565b5b60006108a284828501610869565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682121000000000000000000000000600082015250565b60006108f26014836108ab565b91506108fd826108bc565b602082019050919050565b60006020820190508181036000830152610921816108e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109918261077a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109c4576109c3610957565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a196000836109fe565b9150610a2482610a09565b600082019050919050565b6000610a3a82610a0c565b9150819050919050565b7f4661696c65642121210000000000000000000000000000000000000000000000600082015250565b6000610a7a6009836108ab565b9150610a8582610a44565b602082019050919050565b60006020820190508181036000830152610aa981610a6d565b9050919050565b6000610abb8261077a565b9150610ac68361077a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aff57610afe610957565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b448261077a565b9150610b4f8361077a565b925082610b5f57610b5e610b0a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8981610b6a565b8114610b9457600080fd5b50565b600081519050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081519050610bdc81610bb6565b92915050565b600081519050610bf181610852565b92915050565b600080600080600060a08688031215610c1357610c126106ea565b5b6000610c2188828901610b97565b9550506020610c3288828901610bcd565b9450506040610c4388828901610be2565b9350506060610c5488828901610be2565b9250506080610c6588828901610b97565b9150509295509295909350565b6000610c7d82610bac565b9150610c8883610bac565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cc757610cc6610957565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d0457610d03610957565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4157610d40610957565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d7e57610d7d610957565b5b82820290509291505056fea264697066735822122061f6de0abfa245bdda94dd0a2e2654baf06c897f5d1f790eec5aa71d42c49c2f64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80632e715429146100725780633ccfd60b146100af578063741bef1a146100c6578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b506100996004803603810190610094919061074d565b61028c565b6040516100a69190610793565b60405180910390f35b3480156100bb57600080fd5b506100c46102a4565b005b3480156100d257600080fd5b506100db6104de565b6040516100e8919061080d565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610110610504565b60405161011d9190610837565b60405180910390f35b34801561013257600080fd5b5061014d6004803603810190610148919061087e565b610528565b60405161015a9190610837565b60405180910390f35b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056790919063ffffffff16565b10156101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da90610908565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610329576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103ce5760006001600080848154811061035257610351610928565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c690610986565b91505061032c565b50600067ffffffffffffffff8111156103ea576103e96109cf565b5b6040519080825280602002602001820160405280156104185781602001602082028036833780820191505090505b506000908051906020019061042e929190610643565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045590610a2f565b60006040518083038185875af1925050503d8060008114610492576040519150601f19603f3d011682016040523d82523d6000602084013e610497565b606091505b50509050806104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d290610a90565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610573836105a3565b90506000670de0b6b3a7640000858361058c9190610ab0565b6105969190610b39565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105ec57600080fd5b505afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190610bf7565b5050509150506402540be4008161063b9190610c72565b915050919050565b8280548282559060005260206000209081019282156106bc579160200282015b828111156106bb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610663565b5b5090506106c991906106cd565b5090565b5b808211156106e65760008160009055506001016106ce565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071a826106ef565b9050919050565b61072a8161070f565b811461073557600080fd5b50565b60008135905061074781610721565b92915050565b600060208284031215610763576107626106ea565b5b600061077184828501610738565b91505092915050565b6000819050919050565b61078d8161077a565b82525050565b60006020820190506107a86000830184610784565b92915050565b6000819050919050565b60006107d36107ce6107c9846106ef565b6107ae565b6106ef565b9050919050565b60006107e5826107b8565b9050919050565b60006107f7826107da565b9050919050565b610807816107ec565b82525050565b600060208201905061082260008301846107fe565b92915050565b6108318161070f565b82525050565b600060208201905061084c6000830184610828565b92915050565b61085b8161077a565b811461086657600080fd5b50565b60008135905061087881610852565b92915050565b600060208284031215610894576108936106ea565b5b60006108a284828501610869565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682121000000000000000000000000600082015250565b60006108f26014836108ab565b91506108fd826108bc565b602082019050919050565b60006020820190508181036000830152610921816108e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109918261077a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109c4576109c3610957565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a196000836109fe565b9150610a2482610a09565b600082019050919050565b6000610a3a82610a0c565b9150819050919050565b7f4661696c65642121210000000000000000000000000000000000000000000000600082015250565b6000610a7a6009836108ab565b9150610a8582610a44565b602082019050919050565b60006020820190508181036000830152610aa981610a6d565b9050919050565b6000610abb8261077a565b9150610ac68361077a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aff57610afe610957565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b448261077a565b9150610b4f8361077a565b925082610b5f57610b5e610b0a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b8981610b6a565b8114610b9457600080fd5b50565b600081519050610ba681610b80565b92915050565b6000819050919050565b610bbf81610bac565b8114610bca57600080fd5b50565b600081519050610bdc81610bb6565b92915050565b600081519050610bf181610852565b92915050565b600080600080600060a08688031215610c1357610c126106ea565b5b6000610c2188828901610b97565b9550506020610c3288828901610bcd565b9450506040610c4388828901610be2565b9350506060610c5488828901610be2565b9250506080610c6588828901610b97565b9150509295509295909350565b6000610c7d82610bac565b9150610c8883610bac565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cc757610cc6610957565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d0457610d03610957565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d4157610d40610957565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d7e57610d7d610957565b5b82820290509291505056fea264697066735822122061f6de0abfa245bdda94dd0a2e2654baf06c897f5d1f790eec5aa71d42c49c2f64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmtFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}